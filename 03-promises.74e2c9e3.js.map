{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,eAGwBC,KAAKC,UAS1BC,MAAK,SAAAC,G,IAAGC,EAAQD,EAARC,SAAUC,EAAKF,EAALE,MACjBC,QAAQC,IAAI,uBAAwCC,OAAfJ,EAAS,QAAYI,OAANH,EAAM,OAC1DI,EAAAX,GAASY,OAAOC,QAAQ,uBAAwCH,OAAfJ,EAAS,QAAYI,OAANH,EAAM,M,IAEvEO,OAAM,SAAAT,G,IAAGC,EAAQD,EAARC,SAAUC,EAAKF,EAALE,MAClBC,QAAQC,IAAI,sBAAuCC,OAAfJ,EAAS,QAAYI,OAANH,EAAM,OACzDI,EAAAX,GAASY,OAAOG,QAAQ,sBAAqCL,OAAfJ,EAAS,QAAYI,OAANH,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n  } else {\n    // Reject\n  }\n}\n\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n"],"names":["$6JpON","parcelRequire","Math","random","then","param","position","delay","console","log","concat","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.74e2c9e3.js.map"}